# Задание 1. Написать программу, которая будет складывать, вычитать,
# умножать или делить два числа. Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна
# запрашивать новые данные для вычислений. Завершение программы должно
# выполняться при вводе символа '0' в качестве знака операции. Если пользователь
# вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
# сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль,
# если он ввел 0 в качестве делителя.
# Подсказка:
# Вариант исполнения:
# - условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
# - условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
# Решите через рекурсию. В задании нельзя применять циклы.
# Пример:
# Введите операцию (+, -, *, / или 0 для выхода): +
# Введите первое число: 214
# Введите второе число: 234
# Ваш результат 448
# Введите операцию (+, -, *, / или 0 для выхода): -
# Введите первое число: вп
# Вы вместо трехзначного числа ввели строку (((. Исправьтесь
# Введите операцию (+, -, *, / или 0 для выхода):

class NewEx(Exception):
    pass


def rec_operation(user_symb):
    try:
        if user_symb == "start":
            rec_operation(input("Введите операцию (+, -, *, / или 0 для выхода): "))
            return None
        if user_symb == "0":
            return None
        first_number = float(input("Введите первое число: "))
        second_number = float(input("Введите первое число: "))
        if user_symb == "+":
            result = first_number + second_number
        elif user_symb == "-":
            result = first_number - second_number
        elif user_symb == "*":
            result = first_number * second_number
        elif user_symb == "/":
            result = first_number / second_number
        else:
            raise NewEx()
        print(first_number, user_symb, second_number, "=", result)
        rec_operation(input("Введите операцию (+, -, *, / или 0 для выхода): "))

    except ValueError:
        print("Некорректное значение.")
        rec_operation("start")
    except NewEx:
        print("Неверная операция, попробуйте ещё раз.")
        rec_operation("start")
    except ZeroDivisionError:
        print("Ошибка: попытка деления на 0")
        rec_operation("start")


rec_operation("start")
